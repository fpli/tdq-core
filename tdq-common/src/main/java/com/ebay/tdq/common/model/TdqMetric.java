/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ebay.tdq.common.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TdqMetric extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6163292678285892736L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TdqMetric\",\"namespace\":\"com.ebay.tdq.common.model\",\"fields\":[{\"name\":\"rheosHeader\",\"type\":{\"type\":\"record\",\"name\":\"RheosHeader\",\"fields\":[{\"name\":\"eventCreateTimestamp\",\"type\":\"long\"},{\"name\":\"eventSentTimestamp\",\"type\":\"long\"},{\"name\":\"schemaId\",\"type\":\"int\"},{\"name\":\"eventId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"producerId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]},\"doc\":\"Rheos header\"},{\"name\":\"metricId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metricName + tags\"},{\"name\":\"metricName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"metric name\"},{\"name\":\"eventTime\",\"type\":\"long\",\"doc\":\"event time\"},{\"name\":\"processTime\",\"type\":\"long\",\"doc\":\"process time\"},{\"name\":\"tags\",\"type\":[\"null\",{\"type\":\"map\",\"values\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"avro.java.string\":\"String\"}]},{\"name\":\"values\",\"type\":{\"type\":\"map\",\"values\":\"double\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<TdqMetric> ENCODER =
      new BinaryMessageEncoder<TdqMetric>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TdqMetric> DECODER =
      new BinaryMessageDecoder<TdqMetric>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<TdqMetric> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<TdqMetric> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<TdqMetric>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this TdqMetric to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a TdqMetric from a ByteBuffer. */
  public static TdqMetric fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Rheos header */
  @Deprecated public com.ebay.tdq.common.model.RheosHeader rheosHeader;
  /** metricName + tags */
  @Deprecated public java.lang.String metricId;
  /** metric name */
  @Deprecated public java.lang.String metricName;
  /** event time */
  @Deprecated public long eventTime;
  /** process time */
  @Deprecated public long processTime;
  @Deprecated public java.util.Map<java.lang.String,java.lang.String> tags;
  @Deprecated public java.util.Map<java.lang.String,java.lang.Double> values;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TdqMetric() {}

  /**
   * All-args constructor.
   * @param rheosHeader Rheos header
   * @param metricId metricName + tags
   * @param metricName metric name
   * @param eventTime event time
   * @param processTime process time
   * @param tags The new value for tags
   * @param values The new value for values
   */
  public TdqMetric(com.ebay.tdq.common.model.RheosHeader rheosHeader, java.lang.String metricId, java.lang.String metricName, java.lang.Long eventTime, java.lang.Long processTime, java.util.Map<java.lang.String,java.lang.String> tags, java.util.Map<java.lang.String,java.lang.Double> values) {
    this.rheosHeader = rheosHeader;
    this.metricId = metricId;
    this.metricName = metricName;
    this.eventTime = eventTime;
    this.processTime = processTime;
    this.tags = tags;
    this.values = values;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return rheosHeader;
    case 1: return metricId;
    case 2: return metricName;
    case 3: return eventTime;
    case 4: return processTime;
    case 5: return tags;
    case 6: return values;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: rheosHeader = (com.ebay.tdq.common.model.RheosHeader)value$; break;
    case 1: metricId = (java.lang.String)value$; break;
    case 2: metricName = (java.lang.String)value$; break;
    case 3: eventTime = (java.lang.Long)value$; break;
    case 4: processTime = (java.lang.Long)value$; break;
    case 5: tags = (java.util.Map<java.lang.String,java.lang.String>)value$; break;
    case 6: values = (java.util.Map<java.lang.String,java.lang.Double>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'rheosHeader' field.
   * @return Rheos header
   */
  public com.ebay.tdq.common.model.RheosHeader getRheosHeader() {
    return rheosHeader;
  }

  /**
   * Sets the value of the 'rheosHeader' field.
   * Rheos header
   * @param value the value to set.
   */
  public void setRheosHeader(com.ebay.tdq.common.model.RheosHeader value) {
    this.rheosHeader = value;
  }

  /**
   * Gets the value of the 'metricId' field.
   * @return metricName + tags
   */
  public java.lang.String getMetricId() {
    return metricId;
  }

  /**
   * Sets the value of the 'metricId' field.
   * metricName + tags
   * @param value the value to set.
   */
  public void setMetricId(java.lang.String value) {
    this.metricId = value;
  }

  /**
   * Gets the value of the 'metricName' field.
   * @return metric name
   */
  public java.lang.String getMetricName() {
    return metricName;
  }

  /**
   * Sets the value of the 'metricName' field.
   * metric name
   * @param value the value to set.
   */
  public void setMetricName(java.lang.String value) {
    this.metricName = value;
  }

  /**
   * Gets the value of the 'eventTime' field.
   * @return event time
   */
  public java.lang.Long getEventTime() {
    return eventTime;
  }

  /**
   * Sets the value of the 'eventTime' field.
   * event time
   * @param value the value to set.
   */
  public void setEventTime(java.lang.Long value) {
    this.eventTime = value;
  }

  /**
   * Gets the value of the 'processTime' field.
   * @return process time
   */
  public java.lang.Long getProcessTime() {
    return processTime;
  }

  /**
   * Sets the value of the 'processTime' field.
   * process time
   * @param value the value to set.
   */
  public void setProcessTime(java.lang.Long value) {
    this.processTime = value;
  }

  /**
   * Gets the value of the 'tags' field.
   * @return The value of the 'tags' field.
   */
  public java.util.Map<java.lang.String,java.lang.String> getTags() {
    return tags;
  }

  /**
   * Sets the value of the 'tags' field.
   * @param value the value to set.
   */
  public void setTags(java.util.Map<java.lang.String,java.lang.String> value) {
    this.tags = value;
  }

  /**
   * Gets the value of the 'values' field.
   * @return The value of the 'values' field.
   */
  public java.util.Map<java.lang.String,java.lang.Double> getValues() {
    return values;
  }

  /**
   * Sets the value of the 'values' field.
   * @param value the value to set.
   */
  public void setValues(java.util.Map<java.lang.String,java.lang.Double> value) {
    this.values = value;
  }

  /**
   * Creates a new TdqMetric RecordBuilder.
   * @return A new TdqMetric RecordBuilder
   */
  public static com.ebay.tdq.common.model.TdqMetric.Builder newBuilder() {
    return new com.ebay.tdq.common.model.TdqMetric.Builder();
  }

  /**
   * Creates a new TdqMetric RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TdqMetric RecordBuilder
   */
  public static com.ebay.tdq.common.model.TdqMetric.Builder newBuilder(com.ebay.tdq.common.model.TdqMetric.Builder other) {
    return new com.ebay.tdq.common.model.TdqMetric.Builder(other);
  }

  /**
   * Creates a new TdqMetric RecordBuilder by copying an existing TdqMetric instance.
   * @param other The existing instance to copy.
   * @return A new TdqMetric RecordBuilder
   */
  public static com.ebay.tdq.common.model.TdqMetric.Builder newBuilder(com.ebay.tdq.common.model.TdqMetric other) {
    return new com.ebay.tdq.common.model.TdqMetric.Builder(other);
  }

  /**
   * RecordBuilder for TdqMetric instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TdqMetric>
    implements org.apache.avro.data.RecordBuilder<TdqMetric> {

    /** Rheos header */
    private com.ebay.tdq.common.model.RheosHeader rheosHeader;
    private com.ebay.tdq.common.model.RheosHeader.Builder rheosHeaderBuilder;
    /** metricName + tags */
    private java.lang.String metricId;
    /** metric name */
    private java.lang.String metricName;
    /** event time */
    private long eventTime;
    /** process time */
    private long processTime;
    private java.util.Map<java.lang.String,java.lang.String> tags;
    private java.util.Map<java.lang.String,java.lang.Double> values;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.ebay.tdq.common.model.TdqMetric.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.rheosHeader)) {
        this.rheosHeader = data().deepCopy(fields()[0].schema(), other.rheosHeader);
        fieldSetFlags()[0] = true;
      }
      if (other.hasRheosHeaderBuilder()) {
        this.rheosHeaderBuilder = com.ebay.tdq.common.model.RheosHeader.newBuilder(other.getRheosHeaderBuilder());
      }
      if (isValidValue(fields()[1], other.metricId)) {
        this.metricId = data().deepCopy(fields()[1].schema(), other.metricId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.metricName)) {
        this.metricName = data().deepCopy(fields()[2].schema(), other.metricName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.eventTime)) {
        this.eventTime = data().deepCopy(fields()[3].schema(), other.eventTime);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.processTime)) {
        this.processTime = data().deepCopy(fields()[4].schema(), other.processTime);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.tags)) {
        this.tags = data().deepCopy(fields()[5].schema(), other.tags);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.values)) {
        this.values = data().deepCopy(fields()[6].schema(), other.values);
        fieldSetFlags()[6] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing TdqMetric instance
     * @param other The existing instance to copy.
     */
    private Builder(com.ebay.tdq.common.model.TdqMetric other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.rheosHeader)) {
        this.rheosHeader = data().deepCopy(fields()[0].schema(), other.rheosHeader);
        fieldSetFlags()[0] = true;
      }
      this.rheosHeaderBuilder = null;
      if (isValidValue(fields()[1], other.metricId)) {
        this.metricId = data().deepCopy(fields()[1].schema(), other.metricId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.metricName)) {
        this.metricName = data().deepCopy(fields()[2].schema(), other.metricName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.eventTime)) {
        this.eventTime = data().deepCopy(fields()[3].schema(), other.eventTime);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.processTime)) {
        this.processTime = data().deepCopy(fields()[4].schema(), other.processTime);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.tags)) {
        this.tags = data().deepCopy(fields()[5].schema(), other.tags);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.values)) {
        this.values = data().deepCopy(fields()[6].schema(), other.values);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'rheosHeader' field.
      * Rheos header
      * @return The value.
      */
    public com.ebay.tdq.common.model.RheosHeader getRheosHeader() {
      return rheosHeader;
    }

    /**
      * Sets the value of the 'rheosHeader' field.
      * Rheos header
      * @param value The value of 'rheosHeader'.
      * @return This builder.
      */
    public com.ebay.tdq.common.model.TdqMetric.Builder setRheosHeader(com.ebay.tdq.common.model.RheosHeader value) {
      validate(fields()[0], value);
      this.rheosHeaderBuilder = null;
      this.rheosHeader = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'rheosHeader' field has been set.
      * Rheos header
      * @return True if the 'rheosHeader' field has been set, false otherwise.
      */
    public boolean hasRheosHeader() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'rheosHeader' field and creates one if it doesn't exist yet.
     * Rheos header
     * @return This builder.
     */
    public com.ebay.tdq.common.model.RheosHeader.Builder getRheosHeaderBuilder() {
      if (rheosHeaderBuilder == null) {
        if (hasRheosHeader()) {
          setRheosHeaderBuilder(com.ebay.tdq.common.model.RheosHeader.newBuilder(rheosHeader));
        } else {
          setRheosHeaderBuilder(com.ebay.tdq.common.model.RheosHeader.newBuilder());
        }
      }
      return rheosHeaderBuilder;
    }

    /**
     * Sets the Builder instance for the 'rheosHeader' field
     * Rheos header
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.ebay.tdq.common.model.TdqMetric.Builder setRheosHeaderBuilder(com.ebay.tdq.common.model.RheosHeader.Builder value) {
      clearRheosHeader();
      rheosHeaderBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'rheosHeader' field has an active Builder instance
     * Rheos header
     * @return True if the 'rheosHeader' field has an active Builder instance
     */
    public boolean hasRheosHeaderBuilder() {
      return rheosHeaderBuilder != null;
    }

    /**
      * Clears the value of the 'rheosHeader' field.
      * Rheos header
      * @return This builder.
      */
    public com.ebay.tdq.common.model.TdqMetric.Builder clearRheosHeader() {
      rheosHeader = null;
      rheosHeaderBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'metricId' field.
      * metricName + tags
      * @return The value.
      */
    public java.lang.String getMetricId() {
      return metricId;
    }

    /**
      * Sets the value of the 'metricId' field.
      * metricName + tags
      * @param value The value of 'metricId'.
      * @return This builder.
      */
    public com.ebay.tdq.common.model.TdqMetric.Builder setMetricId(java.lang.String value) {
      validate(fields()[1], value);
      this.metricId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'metricId' field has been set.
      * metricName + tags
      * @return True if the 'metricId' field has been set, false otherwise.
      */
    public boolean hasMetricId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'metricId' field.
      * metricName + tags
      * @return This builder.
      */
    public com.ebay.tdq.common.model.TdqMetric.Builder clearMetricId() {
      metricId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'metricName' field.
      * metric name
      * @return The value.
      */
    public java.lang.String getMetricName() {
      return metricName;
    }

    /**
      * Sets the value of the 'metricName' field.
      * metric name
      * @param value The value of 'metricName'.
      * @return This builder.
      */
    public com.ebay.tdq.common.model.TdqMetric.Builder setMetricName(java.lang.String value) {
      validate(fields()[2], value);
      this.metricName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'metricName' field has been set.
      * metric name
      * @return True if the 'metricName' field has been set, false otherwise.
      */
    public boolean hasMetricName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'metricName' field.
      * metric name
      * @return This builder.
      */
    public com.ebay.tdq.common.model.TdqMetric.Builder clearMetricName() {
      metricName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventTime' field.
      * event time
      * @return The value.
      */
    public java.lang.Long getEventTime() {
      return eventTime;
    }

    /**
      * Sets the value of the 'eventTime' field.
      * event time
      * @param value The value of 'eventTime'.
      * @return This builder.
      */
    public com.ebay.tdq.common.model.TdqMetric.Builder setEventTime(long value) {
      validate(fields()[3], value);
      this.eventTime = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'eventTime' field has been set.
      * event time
      * @return True if the 'eventTime' field has been set, false otherwise.
      */
    public boolean hasEventTime() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'eventTime' field.
      * event time
      * @return This builder.
      */
    public com.ebay.tdq.common.model.TdqMetric.Builder clearEventTime() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'processTime' field.
      * process time
      * @return The value.
      */
    public java.lang.Long getProcessTime() {
      return processTime;
    }

    /**
      * Sets the value of the 'processTime' field.
      * process time
      * @param value The value of 'processTime'.
      * @return This builder.
      */
    public com.ebay.tdq.common.model.TdqMetric.Builder setProcessTime(long value) {
      validate(fields()[4], value);
      this.processTime = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'processTime' field has been set.
      * process time
      * @return True if the 'processTime' field has been set, false otherwise.
      */
    public boolean hasProcessTime() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'processTime' field.
      * process time
      * @return This builder.
      */
    public com.ebay.tdq.common.model.TdqMetric.Builder clearProcessTime() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'tags' field.
      * @return The value.
      */
    public java.util.Map<java.lang.String,java.lang.String> getTags() {
      return tags;
    }

    /**
      * Sets the value of the 'tags' field.
      * @param value The value of 'tags'.
      * @return This builder.
      */
    public com.ebay.tdq.common.model.TdqMetric.Builder setTags(java.util.Map<java.lang.String,java.lang.String> value) {
      validate(fields()[5], value);
      this.tags = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'tags' field has been set.
      * @return True if the 'tags' field has been set, false otherwise.
      */
    public boolean hasTags() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'tags' field.
      * @return This builder.
      */
    public com.ebay.tdq.common.model.TdqMetric.Builder clearTags() {
      tags = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'values' field.
      * @return The value.
      */
    public java.util.Map<java.lang.String,java.lang.Double> getValues() {
      return values;
    }

    /**
      * Sets the value of the 'values' field.
      * @param value The value of 'values'.
      * @return This builder.
      */
    public com.ebay.tdq.common.model.TdqMetric.Builder setValues(java.util.Map<java.lang.String,java.lang.Double> value) {
      validate(fields()[6], value);
      this.values = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'values' field has been set.
      * @return True if the 'values' field has been set, false otherwise.
      */
    public boolean hasValues() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'values' field.
      * @return This builder.
      */
    public com.ebay.tdq.common.model.TdqMetric.Builder clearValues() {
      values = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TdqMetric build() {
      try {
        TdqMetric record = new TdqMetric();
        if (rheosHeaderBuilder != null) {
          record.rheosHeader = this.rheosHeaderBuilder.build();
        } else {
          record.rheosHeader = fieldSetFlags()[0] ? this.rheosHeader : (com.ebay.tdq.common.model.RheosHeader) defaultValue(fields()[0]);
        }
        record.metricId = fieldSetFlags()[1] ? this.metricId : (java.lang.String) defaultValue(fields()[1]);
        record.metricName = fieldSetFlags()[2] ? this.metricName : (java.lang.String) defaultValue(fields()[2]);
        record.eventTime = fieldSetFlags()[3] ? this.eventTime : (java.lang.Long) defaultValue(fields()[3]);
        record.processTime = fieldSetFlags()[4] ? this.processTime : (java.lang.Long) defaultValue(fields()[4]);
        record.tags = fieldSetFlags()[5] ? this.tags : (java.util.Map<java.lang.String,java.lang.String>) defaultValue(fields()[5]);
        record.values = fieldSetFlags()[6] ? this.values : (java.util.Map<java.lang.String,java.lang.Double>) defaultValue(fields()[6]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TdqMetric>
    WRITER$ = (org.apache.avro.io.DatumWriter<TdqMetric>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TdqMetric>
    READER$ = (org.apache.avro.io.DatumReader<TdqMetric>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
